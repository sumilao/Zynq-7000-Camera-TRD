-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFSobelFilter3x3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_V_V_empty_n : IN STD_LOGIC;
    p_src_mat_V_V_read : OUT STD_LOGIC;
    p_gradx_mat_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_gradx_mat_V_V_full_n : IN STD_LOGIC;
    p_gradx_mat_V_V_write : OUT STD_LOGIC;
    p_grady_mat_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_grady_mat_V_V_full_n : IN STD_LOGIC;
    p_grady_mat_V_V_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of xFSobelFilter3x3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_mat_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_6_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_9_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_764 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_gradx_mat_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal tmp_13_reg_788 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_788_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_grady_mat_V_V_blk_n : STD_LOGIC;
    signal p_1_reg_254 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_0177_0_i_reg_290 : STD_LOGIC_VECTOR (12 downto 0);
    signal src_buf3_V_reg_302 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_reg_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_352 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_reg_364 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal col_V_fu_435_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_717 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal op2_assign_fu_450_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_reg_740 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_1_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_01078_3_fu_542_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_01078_3_reg_749 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_01072_3_fu_558_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_01072_3_reg_754 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_01066_3_fu_574_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_01066_3_reg_759 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_587_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_reg_768 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op100_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_9_reg_772_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_772_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_772_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_772_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_1_fu_615_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_1_reg_776 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_11_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_781 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_781_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_788_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_788_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_load_reg_807 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_load_reg_814 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf0_V_fu_637_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf0_V_reg_821 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal buf1_V_fu_647_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_V_reg_826 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_V_fu_657_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_V_reg_831 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_reg_836 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesY_0_V_reg_841 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_2_reg_846 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesY_0_V_2_reg_851 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_12_fu_687_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_s_12_reg_856 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_fu_695_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_reg_861 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter4_state10 : STD_LOGIC;
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_fu_377_ap_ready : STD_LOGIC;
    signal call_ret_xFSobel3x3_fu_377_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_fu_377_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_ready : STD_LOGIC;
    signal GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_ready : STD_LOGIC;
    signal ap_phi_mux_p_1_phi_fu_258_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_2_reg_266 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state13 : BOOLEAN;
    signal p_6_reg_278 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_p_0177_0_i_phi_fu_294_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_src_buf3_V_phi_fu_306_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf2_V_phi_fu_330_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf3_0_V_phi_fu_344_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_0_V_phi_fu_356_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_V_phi_fu_368_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_0_V_addr_1_gep_fu_210_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_gep_fu_216_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_gep_fu_222_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_5_fu_100 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_4_fu_104 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_3_fu_108 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_426_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_cast_fu_447_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_cast_fu_456_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_s_fu_496_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp4_fu_550_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_1_9_fu_504_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp8_fu_566_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_2_10_fu_512_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast1_fu_474_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_cast_fu_606_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_ind_V_fu_675_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_12_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_643 : BOOLEAN;
    signal ap_condition_647 : BOOLEAN;
    signal ap_condition_350 : BOOLEAN;

    component xFSobel3x3 IS
    port (
        ap_ready : OUT STD_LOGIC;
        src_buf1_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf1_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf1_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf2_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf2_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xFGradientX3x3_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        t2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        m0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        m2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xFGradientY3x3_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        t1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        t2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_ip_mux_32_8eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xFSobelFilter3x3_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFSobelFilter3x3_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFSobelFilter3x3_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component xFSobelFilter3x3_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    call_ret_xFSobel3x3_fu_377 : component xFSobel3x3
    port map (
        ap_ready => call_ret_xFSobel3x3_fu_377_ap_ready,
        src_buf1_0_V_read => ap_phi_mux_src_buf1_V_phi_fu_368_p4,
        src_buf1_1_V_read => ap_phi_mux_src_buf1_0_V_phi_fu_356_p4,
        src_buf1_2_V_read => buf0_V_fu_637_p5,
        src_buf2_0_V_read => ap_phi_mux_src_buf2_V_phi_fu_330_p4,
        src_buf2_2_V_read => buf1_V_fu_647_p5,
        src_buf3_0_V_read => ap_phi_mux_src_buf3_V_phi_fu_306_p4,
        src_buf3_1_V_read => ap_phi_mux_src_buf3_0_V_phi_fu_344_p4,
        src_buf3_2_V_read => buf2_V_fu_657_p5,
        ap_return_0 => call_ret_xFSobel3x3_fu_377_ap_return_0,
        ap_return_1 => call_ret_xFSobel3x3_fu_377_ap_return_1);

    GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394 : component xFGradientX3x3_0_0_s
    port map (
        ap_ready => GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_ready,
        t0_V => src_buf1_V_reg_364,
        t2_V => ap_const_lv8_0,
        m0_V => src_buf2_V_reg_326,
        m2_V => ap_const_lv8_0,
        b0_V => src_buf3_V_reg_302,
        b2_V => ap_const_lv8_0,
        ap_return => GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_return);

    GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410 : component xFGradientY3x3_0_0_s
    port map (
        ap_ready => GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_ready,
        t0_V => src_buf1_V_reg_364,
        t1_V => src_buf1_0_V_reg_352,
        t2_V => ap_const_lv8_0,
        b0_V => src_buf3_V_reg_302,
        b1_V => src_buf3_0_V_reg_339,
        b2_V => ap_const_lv8_0,
        ap_return => GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_return);

    sobel_ip_mux_32_8eOg_U53 : component sobel_ip_mux_32_8eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_load_reg_807,
        din2 => buf_2_V_load_reg_814,
        din3 => p_01078_3_reg_749,
        dout => buf0_V_fu_637_p5);

    sobel_ip_mux_32_8eOg_U54 : component sobel_ip_mux_32_8eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_load_reg_807,
        din2 => buf_2_V_load_reg_814,
        din3 => p_01072_3_reg_754,
        dout => buf1_V_fu_647_p5);

    sobel_ip_mux_32_8eOg_U55 : component sobel_ip_mux_32_8eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_load_reg_807,
        din2 => buf_2_V_load_reg_814,
        din3 => p_01066_3_reg_759,
        dout => buf2_V_fu_657_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((tmp_9_fu_610_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter4_state10)) or ((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter4_state10))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_0177_0_i_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_0177_0_i_reg_290 <= col_V_1_reg_776;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_0177_0_i_reg_290 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_1_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_reg_713 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_1_reg_254 <= col_V_reg_717;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_1_reg_254 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_2_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                p_2_reg_266 <= p_s_12_reg_856;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_2_reg_266 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    p_6_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                p_6_reg_278 <= row_V_reg_861;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_6_reg_278 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    src_buf1_0_V_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_0_V_reg_352 <= buf0_V_reg_821;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf1_0_V_reg_352 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_V_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_V_reg_364 <= src_buf1_0_V_reg_352;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf1_V_reg_364 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_0_V_reg_314 <= buf1_V_reg_826;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf2_0_V_reg_314 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_V_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_V_reg_326 <= src_buf2_0_V_reg_314;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf2_V_reg_326 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_0_V_reg_339 <= buf2_V_reg_831;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf3_0_V_reg_339 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_V_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_V_reg_302 <= src_buf3_0_V_reg_339;
            elsif (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf3_V_reg_302 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                GradientValuesX_0_V_2_reg_846 <= GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_return;
                GradientValuesY_0_V_2_reg_851 <= GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_return;
                p_s_12_reg_856 <= p_s_12_fu_687_p3;
                row_V_reg_861 <= row_V_fu_695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                GradientValuesX_0_V_reg_836 <= call_ret_xFSobel3x3_fu_377_ap_return_0;
                GradientValuesY_0_V_reg_841 <= call_ret_xFSobel3x3_fu_377_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf0_V_reg_821 <= buf0_V_fu_637_p5;
                buf1_V_reg_826 <= buf1_V_fu_647_p5;
                buf2_V_reg_831 <= buf2_V_fu_657_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_1_V_load_reg_807 <= buf_1_V_q0;
                buf_2_V_load_reg_814 <= buf_2_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_1_reg_776 <= col_V_1_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_V_reg_717 <= col_V_fu_435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                op2_assign_reg_740 <= op2_assign_fu_450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                p_01066_3_reg_759 <= p_01066_3_fu_574_p3;
                p_01072_3_reg_754 <= p_01072_3_fu_558_p3;
                p_01078_3_reg_749 <= p_01078_3_fu_542_p3;
                p_3_fu_108 <= p_01078_3_fu_542_p3;
                p_4_fu_104 <= p_01072_3_fu_558_p3;
                p_5_fu_100 <= p_01066_3_fu_574_p3;
                tmp_14_reg_768 <= tmp_14_fu_587_p1;
                tmp_5_reg_764 <= tmp_5_fu_582_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_reg_772 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    tmp_11_reg_781(12 downto 0) <= tmp_11_fu_621_p1(12 downto 0);
                tmp_13_reg_788 <= tmp_13_fu_631_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                    tmp_11_reg_781_pp1_iter2_reg(12 downto 0) <= tmp_11_reg_781(12 downto 0);
                tmp_13_reg_788_pp1_iter2_reg <= tmp_13_reg_788;
                tmp_13_reg_788_pp1_iter3_reg <= tmp_13_reg_788_pp1_iter2_reg;
                tmp_13_reg_788_pp1_iter4_reg <= tmp_13_reg_788_pp1_iter3_reg;
                tmp_9_reg_772_pp1_iter2_reg <= tmp_9_reg_772_pp1_iter1_reg;
                tmp_9_reg_772_pp1_iter3_reg <= tmp_9_reg_772_pp1_iter2_reg;
                tmp_9_reg_772_pp1_iter4_reg <= tmp_9_reg_772_pp1_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_6_reg_713 <= tmp_6_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_9_reg_772 <= tmp_9_fu_610_p2;
                tmp_9_reg_772_pp1_iter1_reg <= tmp_9_reg_772;
            end if;
        end if;
    end process;
    tmp_11_reg_781(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    tmp_11_reg_781_pp1_iter2_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_CS_fsm_state13, tmp_6_fu_430_p2, ap_enable_reg_pp0_iter0, tmp_1_fu_460_p2, ap_CS_fsm_state5, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((tmp_6_fu_430_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((tmp_6_fu_430_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((tmp_1_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(5);
    ap_CS_fsm_state13 <= ap_CS_fsm(6);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1, tmp_6_reg_713)
    begin
                ap_block_pp0_stage0_11001 <= ((tmp_6_reg_713 = ap_const_lv1_1) and (p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1, tmp_6_reg_713)
    begin
                ap_block_pp0_stage0_subdone <= ((tmp_6_reg_713 = ap_const_lv1_1) and (p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_V_V_empty_n, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_predicate_op100_read_state7)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op100_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_predicate_op100_read_state7)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op100_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_predicate_op100_read_state7)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op100_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter5_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, tmp_13_reg_788_pp1_iter4_reg)
    begin
                ap_block_state11_pp1_stage0_iter5 <= (((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state13_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n)
    begin
                ap_block_state13 <= ((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, tmp_6_reg_713)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tmp_6_reg_713 = ap_const_lv1_1) and (p_src_mat_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, ap_predicate_op100_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op100_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_350_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772)
    begin
                ap_condition_350 <= ((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_643_assign_proc : process(tmp_5_reg_764, p_01066_3_reg_759)
    begin
                ap_condition_643 <= (not((p_01066_3_reg_759 = ap_const_lv2_1)) and not((p_01066_3_reg_759 = ap_const_lv2_0)) and (tmp_5_reg_764 = ap_const_lv1_0));
    end process;


    ap_condition_647_assign_proc : process(tmp_5_reg_764, tmp_14_reg_768)
    begin
                ap_condition_647 <= (not((tmp_14_reg_768 = ap_const_lv2_1)) and not((tmp_14_reg_768 = ap_const_lv2_0)) and (tmp_5_reg_764 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_6_fu_430_p2)
    begin
        if ((tmp_6_fu_430_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter4_state10_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter4_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter4_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_1_fu_460_p2, ap_CS_fsm_state5)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_1_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0177_0_i_phi_fu_294_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772, p_0177_0_i_reg_290, col_V_1_reg_776)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_0177_0_i_phi_fu_294_p4 <= col_V_1_reg_776;
        else 
            ap_phi_mux_p_0177_0_i_phi_fu_294_p4 <= p_0177_0_i_reg_290;
        end if; 
    end process;


    ap_phi_mux_p_1_phi_fu_258_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_6_reg_713, p_1_reg_254, col_V_reg_717)
    begin
        if (((tmp_6_reg_713 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_1_phi_fu_258_p4 <= col_V_reg_717;
        else 
            ap_phi_mux_p_1_phi_fu_258_p4 <= p_1_reg_254;
        end if; 
    end process;


    ap_phi_mux_src_buf1_0_V_phi_fu_356_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, src_buf1_0_V_reg_352, tmp_9_reg_772_pp1_iter4_reg, buf0_V_reg_821)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf1_0_V_phi_fu_356_p4 <= buf0_V_reg_821;
        else 
            ap_phi_mux_src_buf1_0_V_phi_fu_356_p4 <= src_buf1_0_V_reg_352;
        end if; 
    end process;


    ap_phi_mux_src_buf1_V_phi_fu_368_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, src_buf1_0_V_reg_352, src_buf1_V_reg_364, tmp_9_reg_772_pp1_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf1_V_phi_fu_368_p4 <= src_buf1_0_V_reg_352;
        else 
            ap_phi_mux_src_buf1_V_phi_fu_368_p4 <= src_buf1_V_reg_364;
        end if; 
    end process;


    ap_phi_mux_src_buf2_V_phi_fu_330_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, src_buf2_0_V_reg_314, src_buf2_V_reg_326, tmp_9_reg_772_pp1_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf2_V_phi_fu_330_p4 <= src_buf2_0_V_reg_314;
        else 
            ap_phi_mux_src_buf2_V_phi_fu_330_p4 <= src_buf2_V_reg_326;
        end if; 
    end process;


    ap_phi_mux_src_buf3_0_V_phi_fu_344_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, src_buf3_0_V_reg_339, tmp_9_reg_772_pp1_iter4_reg, buf2_V_reg_831)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf3_0_V_phi_fu_344_p4 <= buf2_V_reg_831;
        else 
            ap_phi_mux_src_buf3_0_V_phi_fu_344_p4 <= src_buf3_0_V_reg_339;
        end if; 
    end process;


    ap_phi_mux_src_buf3_V_phi_fu_306_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, src_buf3_V_reg_302, src_buf3_0_V_reg_339, tmp_9_reg_772_pp1_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf3_V_phi_fu_306_p4 <= src_buf3_0_V_reg_339;
        else 
            ap_phi_mux_src_buf3_V_phi_fu_306_p4 <= src_buf3_V_reg_302;
        end if; 
    end process;


    ap_predicate_op100_read_state7_assign_proc : process(tmp_9_reg_772, tmp_5_reg_764)
    begin
                ap_predicate_op100_read_state7 <= ((tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(tmp_1_fu_460_p2, ap_CS_fsm_state5)
    begin
        if (((tmp_1_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_0_V_addr_1_gep_fu_210_p3 <= tmp_11_fu_621_p1(11 - 1 downto 0);
    buf_0_V_address0 <= tmp_11_reg_781_pp1_iter2_reg(11 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772, tmp_5_reg_764, p_01066_3_reg_759, tmp_14_reg_768, tmp_11_fu_621_p1, tmp_7_fu_441_p1, buf_0_V_addr_1_gep_fu_210_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_14_reg_768 = ap_const_lv2_0))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_gep_fu_210_p3;
        elsif (((tmp_5_reg_764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_01066_3_reg_759 = ap_const_lv2_0))) then 
            buf_0_V_address1 <= tmp_11_fu_621_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_0_V_address1 <= tmp_7_fu_441_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_9_reg_772, tmp_5_reg_764, ap_block_pp0_stage0_11001, p_01066_3_reg_759, tmp_14_reg_768, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_14_reg_768 = ap_const_lv2_0)) or ((tmp_5_reg_764 = ap_const_lv1_0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_01066_3_reg_759 = ap_const_lv2_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_src_mat_V_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772, tmp_5_reg_764, p_01066_3_reg_759, tmp_14_reg_768)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_14_reg_768 = ap_const_lv2_0))) then 
            buf_0_V_d1 <= p_src_mat_V_V_dout;
        elsif ((((tmp_5_reg_764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_01066_3_reg_759 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_6_reg_713, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_9_reg_772, tmp_5_reg_764, ap_block_pp0_stage0_11001, p_01066_3_reg_759, tmp_14_reg_768, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_14_reg_768 = ap_const_lv2_0)) or ((tmp_5_reg_764 = ap_const_lv1_0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_01066_3_reg_759 = ap_const_lv2_0)) or ((tmp_6_reg_713 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_1_gep_fu_216_p3 <= tmp_11_fu_621_p1(11 - 1 downto 0);
    buf_1_V_address0 <= tmp_11_reg_781(11 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772, tmp_5_reg_764, p_01066_3_reg_759, tmp_14_reg_768, tmp_11_fu_621_p1, tmp_7_fu_441_p1, buf_1_V_addr_1_gep_fu_216_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_14_reg_768 = ap_const_lv2_1))) then 
            buf_1_V_address1 <= buf_1_V_addr_1_gep_fu_216_p3;
        elsif (((tmp_5_reg_764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_01066_3_reg_759 = ap_const_lv2_1))) then 
            buf_1_V_address1 <= tmp_11_fu_621_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= tmp_7_fu_441_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_9_reg_772, tmp_5_reg_764, ap_block_pp0_stage0_11001, p_01066_3_reg_759, tmp_14_reg_768, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_14_reg_768 = ap_const_lv2_1)) or ((tmp_5_reg_764 = ap_const_lv1_0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_01066_3_reg_759 = ap_const_lv2_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(p_src_mat_V_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772, tmp_5_reg_764, p_01066_3_reg_759, tmp_14_reg_768)
    begin
        if (((tmp_5_reg_764 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_01066_3_reg_759 = ap_const_lv2_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_14_reg_768 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_d1 <= p_src_mat_V_V_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_6_reg_713, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_9_reg_772, tmp_5_reg_764, ap_block_pp0_stage0_11001, p_01066_3_reg_759, tmp_14_reg_768, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_14_reg_768 = ap_const_lv2_1)) or ((tmp_5_reg_764 = ap_const_lv1_0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_01066_3_reg_759 = ap_const_lv2_1)) or ((tmp_6_reg_713 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_222_p3 <= tmp_11_fu_621_p1(11 - 1 downto 0);
    buf_2_V_address0 <= tmp_11_reg_781(11 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(tmp_11_fu_621_p1, buf_2_V_addr_gep_fu_222_p3, ap_condition_643, ap_condition_647, ap_condition_350)
    begin
        if ((ap_const_boolean_1 = ap_condition_350)) then
            if ((ap_const_boolean_1 = ap_condition_647)) then 
                buf_2_V_address1 <= buf_2_V_addr_gep_fu_222_p3;
            elsif ((ap_const_boolean_1 = ap_condition_643)) then 
                buf_2_V_address1 <= tmp_11_fu_621_p1(11 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_9_reg_772, tmp_5_reg_764, p_01066_3_reg_759, tmp_14_reg_768, ap_block_pp1_stage0_11001)
    begin
        if (((not((tmp_14_reg_768 = ap_const_lv2_1)) and not((tmp_14_reg_768 = ap_const_lv2_0)) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((p_01066_3_reg_759 = ap_const_lv2_1)) and not((p_01066_3_reg_759 = ap_const_lv2_0)) and (tmp_5_reg_764 = ap_const_lv1_0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(p_src_mat_V_V_dout, ap_condition_643, ap_condition_647, ap_condition_350)
    begin
        if ((ap_const_boolean_1 = ap_condition_350)) then
            if ((ap_const_boolean_1 = ap_condition_647)) then 
                buf_2_V_d1 <= p_src_mat_V_V_dout;
            elsif ((ap_const_boolean_1 = ap_condition_643)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_9_reg_772, tmp_5_reg_764, p_01066_3_reg_759, tmp_14_reg_768, ap_block_pp1_stage0_11001)
    begin
        if (((not((tmp_14_reg_768 = ap_const_lv2_1)) and not((tmp_14_reg_768 = ap_const_lv2_0)) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((p_01066_3_reg_759 = ap_const_lv2_1)) and not((p_01066_3_reg_759 = ap_const_lv2_0)) and (tmp_5_reg_764 = ap_const_lv1_0) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_1_fu_615_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_0177_0_i_phi_fu_294_p4) + unsigned(ap_const_lv13_1));
    col_V_fu_435_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_1_phi_fu_258_p4) + unsigned(ap_const_lv13_1));
    op2_assign_fu_450_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_447_p1) + unsigned(ap_const_lv17_1));
    p_01066_3_fu_574_p3 <= 
        sel_tmp8_fu_566_p3 when (tmp_fu_536_p2(0) = '1') else 
        p_2_10_fu_512_p3;
    p_01072_3_fu_558_p3 <= 
        sel_tmp4_fu_550_p3 when (tmp_fu_536_p2(0) = '1') else 
        p_1_9_fu_504_p3;
    p_01078_3_fu_542_p3 <= 
        sel_tmp_fu_532_p1 when (tmp_fu_536_p2(0) = '1') else 
        p_s_fu_496_p3;
    p_1_9_fu_504_p3 <= 
        ap_const_lv2_0 when (tmp_4_fu_490_p2(0) = '1') else 
        p_4_fu_104;
    p_2_10_fu_512_p3 <= 
        ap_const_lv2_1 when (tmp_4_fu_490_p2(0) = '1') else 
        p_5_fu_100;

    p_gradx_mat_V_V_blk_n_assign_proc : process(p_gradx_mat_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)))) then 
            p_gradx_mat_V_V_blk_n <= p_gradx_mat_V_V_full_n;
        else 
            p_gradx_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_gradx_mat_V_V_din_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_CS_fsm_state13, GradientValuesX_0_V_reg_836, GradientValuesX_0_V_2_reg_846, ap_block_pp1_stage0_01001)
    begin
        if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            p_gradx_mat_V_V_din <= GradientValuesX_0_V_2_reg_846;
        elsif (((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            p_gradx_mat_V_V_din <= GradientValuesX_0_V_reg_836;
        else 
            p_gradx_mat_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    p_gradx_mat_V_V_write_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_CS_fsm_state13, ap_block_pp1_stage0_11001)
    begin
        if (((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_gradx_mat_V_V_write <= ap_const_logic_1;
        else 
            p_gradx_mat_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_grady_mat_V_V_blk_n_assign_proc : process(p_grady_mat_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)))) then 
            p_grady_mat_V_V_blk_n <= p_grady_mat_V_V_full_n;
        else 
            p_grady_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_grady_mat_V_V_din_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_CS_fsm_state13, GradientValuesY_0_V_reg_841, GradientValuesY_0_V_2_reg_851, ap_block_pp1_stage0_01001)
    begin
        if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            p_grady_mat_V_V_din <= GradientValuesY_0_V_2_reg_851;
        elsif (((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            p_grady_mat_V_V_din <= GradientValuesY_0_V_reg_841;
        else 
            p_grady_mat_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    p_grady_mat_V_V_write_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_13_reg_788_pp1_iter4_reg, ap_CS_fsm_state13, ap_block_pp1_stage0_11001)
    begin
        if (((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_13_reg_788_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_grady_mat_V_V_write <= ap_const_logic_1;
        else 
            p_grady_mat_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_s_12_fu_687_p3 <= 
        ap_const_lv13_0 when (tmp_12_fu_681_p2(0) = '1') else 
        row_ind_V_fu_675_p2;
    p_s_fu_496_p3 <= 
        ap_const_lv2_2 when (tmp_4_fu_490_p2(0) = '1') else 
        p_3_fu_108;

    p_src_mat_V_V_blk_n_assign_proc : process(p_src_mat_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_6_reg_713, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_9_reg_772, tmp_5_reg_764)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_5_reg_764 = ap_const_lv1_1) and (tmp_9_reg_772 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((tmp_6_reg_713 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_V_V_blk_n <= p_src_mat_V_V_empty_n;
        else 
            p_src_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_6_reg_713, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op100_read_state7, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op100_read_state7 = ap_const_boolean_1)) or ((tmp_6_reg_713 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_V_V_read <= ap_const_logic_1;
        else 
            p_src_mat_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    row_V_fu_695_p2 <= std_logic_vector(unsigned(p_6_reg_278) + unsigned(ap_const_lv13_1));
    row_ind_V_fu_675_p2 <= std_logic_vector(unsigned(p_2_reg_266) + unsigned(ap_const_lv13_1));
    sel_tmp1_fu_520_p2 <= (tmp_2_fu_478_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_526_p2 <= (tmp_3_fu_484_p2 and sel_tmp1_fu_520_p2);
    sel_tmp4_fu_550_p3 <= 
        ap_const_lv2_2 when (sel_tmp2_fu_526_p2(0) = '1') else 
        ap_const_lv2_1;
    sel_tmp8_fu_566_p3 <= 
        ap_const_lv2_0 when (sel_tmp2_fu_526_p2(0) = '1') else 
        ap_const_lv2_2;
    sel_tmp_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp2_fu_526_p2),2));
    tmp_10_cast_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0177_0_i_phi_fu_294_p4),16));
    tmp_11_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0177_0_i_reg_290),64));
    tmp_12_fu_681_p2 <= "1" when (row_ind_V_fu_675_p2 = ap_const_lv13_3) else "0";
    tmp_13_fu_631_p2 <= "1" when (p_0177_0_i_reg_290 = ap_const_lv13_0) else "0";
    tmp_14_fu_587_p1 <= p_2_reg_266(2 - 1 downto 0);
    tmp_1_fu_460_p2 <= "1" when (unsigned(tmp_9_cast_fu_456_p1) < unsigned(op2_assign_reg_740)) else "0";
    tmp_2_fu_478_p2 <= "1" when (p_2_reg_266 = ap_const_lv13_2) else "0";
    tmp_3_fu_484_p2 <= "1" when (p_2_reg_266 = ap_const_lv13_0) else "0";
    tmp_4_fu_490_p2 <= "1" when (p_2_reg_266 = ap_const_lv13_1) else "0";
    tmp_5_fu_582_p2 <= "1" when (unsigned(tmp_9_cast1_fu_474_p1) < unsigned(img_height)) else "0";
    tmp_6_fu_430_p2 <= "1" when (unsigned(tmp_cast_fu_426_p1) < unsigned(img_width)) else "0";
    tmp_7_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_1_reg_254),64));
    tmp_8_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));
    tmp_9_cast1_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_6_reg_278),16));
    tmp_9_cast_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_6_reg_278),17));
    tmp_9_fu_610_p2 <= "1" when (unsigned(tmp_10_cast_fu_606_p1) < unsigned(img_width)) else "0";
    tmp_cast_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_1_phi_fu_258_p4),16));
    tmp_fu_536_p2 <= (tmp_2_fu_478_p2 or sel_tmp2_fu_526_p2);
end behav;
