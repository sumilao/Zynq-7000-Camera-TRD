// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFSobelFilter3x3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_mat_V_V_dout,
        p_src_mat_V_V_empty_n,
        p_src_mat_V_V_read,
        p_gradx_mat_V_V_din,
        p_gradx_mat_V_V_full_n,
        p_gradx_mat_V_V_write,
        p_grady_mat_V_V_din,
        p_grady_mat_V_V_full_n,
        p_grady_mat_V_V_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_state4 = 7'd4;
parameter    ap_ST_fsm_state5 = 7'd8;
parameter    ap_ST_fsm_pp1_stage0 = 7'd16;
parameter    ap_ST_fsm_state12 = 7'd32;
parameter    ap_ST_fsm_state13 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_mat_V_V_dout;
input   p_src_mat_V_V_empty_n;
output   p_src_mat_V_V_read;
output  [7:0] p_gradx_mat_V_V_din;
input   p_gradx_mat_V_V_full_n;
output   p_gradx_mat_V_V_write;
output  [7:0] p_grady_mat_V_V_din;
input   p_grady_mat_V_V_full_n;
output   p_grady_mat_V_V_write;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_mat_V_V_read;
reg[7:0] p_gradx_mat_V_V_din;
reg p_gradx_mat_V_V_write;
reg[7:0] p_grady_mat_V_V_din;
reg p_grady_mat_V_V_write;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_mat_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_6_reg_713;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] tmp_9_reg_772;
reg   [0:0] tmp_5_reg_764;
reg    p_gradx_mat_V_V_blk_n;
reg    ap_enable_reg_pp1_iter5;
reg   [0:0] tmp_13_reg_788;
reg   [0:0] tmp_13_reg_788_pp1_iter4_reg;
wire    ap_CS_fsm_state13;
reg    p_grady_mat_V_V_blk_n;
reg   [12:0] p_1_reg_254;
reg   [12:0] p_0177_0_i_reg_290;
reg   [7:0] src_buf3_V_reg_302;
reg   [7:0] src_buf2_0_V_reg_314;
reg   [7:0] src_buf2_V_reg_326;
reg   [7:0] src_buf3_0_V_reg_339;
reg   [7:0] src_buf1_0_V_reg_352;
reg   [7:0] src_buf1_V_reg_364;
wire   [0:0] tmp_6_fu_430_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [12:0] col_V_fu_435_p2;
reg   [12:0] col_V_reg_717;
reg    ap_enable_reg_pp0_iter0;
wire   [16:0] op2_assign_fu_450_p2;
reg   [16:0] op2_assign_reg_740;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_1_fu_460_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] p_01078_3_fu_542_p3;
reg   [1:0] p_01078_3_reg_749;
wire   [1:0] p_01072_3_fu_558_p3;
reg   [1:0] p_01072_3_reg_754;
wire   [1:0] p_01066_3_fu_574_p3;
reg   [1:0] p_01066_3_reg_759;
wire   [0:0] tmp_5_fu_582_p2;
wire   [1:0] tmp_14_fu_587_p1;
reg   [1:0] tmp_14_reg_768;
wire   [0:0] tmp_9_fu_610_p2;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op100_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
wire    ap_block_state10_pp1_stage0_iter4;
reg    ap_block_state11_pp1_stage0_iter5;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] tmp_9_reg_772_pp1_iter1_reg;
reg   [0:0] tmp_9_reg_772_pp1_iter2_reg;
reg   [0:0] tmp_9_reg_772_pp1_iter3_reg;
reg   [0:0] tmp_9_reg_772_pp1_iter4_reg;
wire   [12:0] col_V_1_fu_615_p2;
reg   [12:0] col_V_1_reg_776;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_11_fu_621_p1;
reg   [63:0] tmp_11_reg_781;
reg   [63:0] tmp_11_reg_781_pp1_iter2_reg;
wire   [0:0] tmp_13_fu_631_p2;
reg   [0:0] tmp_13_reg_788_pp1_iter2_reg;
reg   [0:0] tmp_13_reg_788_pp1_iter3_reg;
wire   [7:0] buf_1_V_q0;
reg   [7:0] buf_1_V_load_reg_807;
reg    ap_enable_reg_pp1_iter3;
wire   [7:0] buf_2_V_q0;
reg   [7:0] buf_2_V_load_reg_814;
wire   [7:0] buf0_V_fu_637_p5;
reg   [7:0] buf0_V_reg_821;
reg    ap_enable_reg_pp1_iter4;
wire   [7:0] buf1_V_fu_647_p5;
reg   [7:0] buf1_V_reg_826;
wire   [7:0] buf2_V_fu_657_p5;
reg   [7:0] buf2_V_reg_831;
reg   [7:0] GradientValuesX_0_V_reg_836;
reg   [7:0] GradientValuesY_0_V_reg_841;
wire   [7:0] GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_return;
reg   [7:0] GradientValuesX_0_V_2_reg_846;
wire    ap_CS_fsm_state12;
wire   [7:0] GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_return;
reg   [7:0] GradientValuesY_0_V_2_reg_851;
wire   [12:0] p_s_12_fu_687_p3;
reg   [12:0] p_s_12_reg_856;
wire   [12:0] row_V_fu_695_p2;
reg   [12:0] row_V_reg_861;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter4_state10;
wire   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
wire   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
wire   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire    call_ret_xFSobel3x3_fu_377_ap_ready;
wire   [7:0] call_ret_xFSobel3x3_fu_377_ap_return_0;
wire   [7:0] call_ret_xFSobel3x3_fu_377_ap_return_1;
wire    GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_ready;
wire    GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_ready;
reg   [12:0] ap_phi_mux_p_1_phi_fu_258_p4;
reg   [12:0] p_2_reg_266;
reg    ap_block_state13;
reg   [12:0] p_6_reg_278;
reg   [12:0] ap_phi_mux_p_0177_0_i_phi_fu_294_p4;
reg   [7:0] ap_phi_mux_src_buf3_V_phi_fu_306_p4;
reg   [7:0] ap_phi_mux_src_buf2_V_phi_fu_330_p4;
reg   [7:0] ap_phi_mux_src_buf3_0_V_phi_fu_344_p4;
reg   [7:0] ap_phi_mux_src_buf1_0_V_phi_fu_356_p4;
reg   [7:0] ap_phi_mux_src_buf1_V_phi_fu_368_p4;
wire   [63:0] tmp_7_fu_441_p1;
wire   [10:0] buf_0_V_addr_1_gep_fu_210_p3;
wire   [10:0] buf_1_V_addr_1_gep_fu_216_p3;
wire   [10:0] buf_2_V_addr_gep_fu_222_p3;
reg    ap_block_pp1_stage0_01001;
reg   [1:0] p_5_fu_100;
reg   [1:0] p_4_fu_104;
reg   [1:0] p_3_fu_108;
wire   [15:0] tmp_cast_fu_426_p1;
wire   [16:0] tmp_8_cast_fu_447_p1;
wire   [16:0] tmp_9_cast_fu_456_p1;
wire   [0:0] tmp_4_fu_490_p2;
wire   [0:0] tmp_2_fu_478_p2;
wire   [0:0] tmp_3_fu_484_p2;
wire   [0:0] sel_tmp1_fu_520_p2;
wire   [0:0] sel_tmp2_fu_526_p2;
wire   [0:0] tmp_fu_536_p2;
wire   [1:0] sel_tmp_fu_532_p1;
wire   [1:0] p_s_fu_496_p3;
wire   [1:0] sel_tmp4_fu_550_p3;
wire   [1:0] p_1_9_fu_504_p3;
wire   [1:0] sel_tmp8_fu_566_p3;
wire   [1:0] p_2_10_fu_512_p3;
wire   [15:0] tmp_9_cast1_fu_474_p1;
wire   [15:0] tmp_10_cast_fu_606_p1;
wire   [12:0] row_ind_V_fu_675_p2;
wire   [0:0] tmp_12_fu_681_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_643;
reg    ap_condition_647;
reg    ap_condition_350;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

xFSobel3x3 call_ret_xFSobel3x3_fu_377(
    .ap_ready(call_ret_xFSobel3x3_fu_377_ap_ready),
    .src_buf1_0_V_read(ap_phi_mux_src_buf1_V_phi_fu_368_p4),
    .src_buf1_1_V_read(ap_phi_mux_src_buf1_0_V_phi_fu_356_p4),
    .src_buf1_2_V_read(buf0_V_fu_637_p5),
    .src_buf2_0_V_read(ap_phi_mux_src_buf2_V_phi_fu_330_p4),
    .src_buf2_2_V_read(buf1_V_fu_647_p5),
    .src_buf3_0_V_read(ap_phi_mux_src_buf3_V_phi_fu_306_p4),
    .src_buf3_1_V_read(ap_phi_mux_src_buf3_0_V_phi_fu_344_p4),
    .src_buf3_2_V_read(buf2_V_fu_657_p5),
    .ap_return_0(call_ret_xFSobel3x3_fu_377_ap_return_0),
    .ap_return_1(call_ret_xFSobel3x3_fu_377_ap_return_1)
);

xFGradientX3x3_0_0_s GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394(
    .ap_ready(GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_ready),
    .t0_V(src_buf1_V_reg_364),
    .t2_V(8'd0),
    .m0_V(src_buf2_V_reg_326),
    .m2_V(8'd0),
    .b0_V(src_buf3_V_reg_302),
    .b2_V(8'd0),
    .ap_return(GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_return)
);

xFGradientY3x3_0_0_s GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410(
    .ap_ready(GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_ready),
    .t0_V(src_buf1_V_reg_364),
    .t1_V(src_buf1_0_V_reg_352),
    .t2_V(8'd0),
    .b0_V(src_buf3_V_reg_302),
    .b1_V(src_buf3_0_V_reg_339),
    .b2_V(8'd0),
    .ap_return(GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_return)
);

sobel_ip_mux_32_8eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_ip_mux_32_8eOg_U53(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_load_reg_807),
    .din2(buf_2_V_load_reg_814),
    .din3(p_01078_3_reg_749),
    .dout(buf0_V_fu_637_p5)
);

sobel_ip_mux_32_8eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_ip_mux_32_8eOg_U54(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_load_reg_807),
    .din2(buf_2_V_load_reg_814),
    .din3(p_01072_3_reg_754),
    .dout(buf1_V_fu_647_p5)
);

sobel_ip_mux_32_8eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_ip_mux_32_8eOg_U55(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_load_reg_807),
    .din2(buf_2_V_load_reg_814),
    .din3(p_01066_3_reg_759),
    .dout(buf2_V_fu_657_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((tmp_9_fu_610_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter4_state10)) | ((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter4_state10))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_0177_0_i_reg_290 <= col_V_1_reg_776;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        p_0177_0_i_reg_290 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_713 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_reg_254 <= col_V_reg_717;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_1_reg_254 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        p_2_reg_266 <= p_s_12_reg_856;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_2_reg_266 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        p_6_reg_278 <= row_V_reg_861;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_6_reg_278 <= 13'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_0_V_reg_352 <= buf0_V_reg_821;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf1_0_V_reg_352 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_V_reg_364 <= src_buf1_0_V_reg_352;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf1_V_reg_364 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_0_V_reg_314 <= buf1_V_reg_826;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf2_0_V_reg_314 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_V_reg_326 <= src_buf2_0_V_reg_314;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf2_V_reg_326 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_0_V_reg_339 <= buf2_V_reg_831;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf3_0_V_reg_339 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_V_reg_302 <= src_buf3_0_V_reg_339;
    end else if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        src_buf3_V_reg_302 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        GradientValuesX_0_V_2_reg_846 <= GradientValuesX_0_V_2_xFGradientX3x3_0_0_s_fu_394_ap_return;
        GradientValuesY_0_V_2_reg_851 <= GradientValuesY_0_V_2_xFGradientY3x3_0_0_s_fu_410_ap_return;
        p_s_12_reg_856 <= p_s_12_fu_687_p3;
        row_V_reg_861 <= row_V_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        GradientValuesX_0_V_reg_836 <= call_ret_xFSobel3x3_fu_377_ap_return_0;
        GradientValuesY_0_V_reg_841 <= call_ret_xFSobel3x3_fu_377_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf0_V_reg_821 <= buf0_V_fu_637_p5;
        buf1_V_reg_826 <= buf1_V_fu_647_p5;
        buf2_V_reg_831 <= buf2_V_fu_657_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_load_reg_807 <= buf_1_V_q0;
        buf_2_V_load_reg_814 <= buf_2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_V_1_reg_776 <= col_V_1_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_V_reg_717 <= col_V_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        op2_assign_reg_740 <= op2_assign_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        p_01066_3_reg_759 <= p_01066_3_fu_574_p3;
        p_01072_3_reg_754 <= p_01072_3_fu_558_p3;
        p_01078_3_reg_749 <= p_01078_3_fu_542_p3;
        p_3_fu_108 <= p_01078_3_fu_542_p3;
        p_4_fu_104 <= p_01072_3_fu_558_p3;
        p_5_fu_100 <= p_01066_3_fu_574_p3;
        tmp_14_reg_768 <= tmp_14_fu_587_p1;
        tmp_5_reg_764 <= tmp_5_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_772 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_11_reg_781[12 : 0] <= tmp_11_fu_621_p1[12 : 0];
        tmp_13_reg_788 <= tmp_13_fu_631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        tmp_11_reg_781_pp1_iter2_reg[12 : 0] <= tmp_11_reg_781[12 : 0];
        tmp_13_reg_788_pp1_iter2_reg <= tmp_13_reg_788;
        tmp_13_reg_788_pp1_iter3_reg <= tmp_13_reg_788_pp1_iter2_reg;
        tmp_13_reg_788_pp1_iter4_reg <= tmp_13_reg_788_pp1_iter3_reg;
        tmp_9_reg_772_pp1_iter2_reg <= tmp_9_reg_772_pp1_iter1_reg;
        tmp_9_reg_772_pp1_iter3_reg <= tmp_9_reg_772_pp1_iter2_reg;
        tmp_9_reg_772_pp1_iter4_reg <= tmp_9_reg_772_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_reg_713 <= tmp_6_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_9_reg_772 <= tmp_9_fu_610_p2;
        tmp_9_reg_772_pp1_iter1_reg <= tmp_9_reg_772;
    end
end

always @ (*) begin
    if ((tmp_6_fu_430_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0))) begin
        ap_condition_pp1_exit_iter4_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter4_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_1_fu_460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_p_0177_0_i_phi_fu_294_p4 = col_V_1_reg_776;
    end else begin
        ap_phi_mux_p_0177_0_i_phi_fu_294_p4 = p_0177_0_i_reg_290;
    end
end

always @ (*) begin
    if (((tmp_6_reg_713 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_1_phi_fu_258_p4 = col_V_reg_717;
    end else begin
        ap_phi_mux_p_1_phi_fu_258_p4 = p_1_reg_254;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_src_buf1_0_V_phi_fu_356_p4 = buf0_V_reg_821;
    end else begin
        ap_phi_mux_src_buf1_0_V_phi_fu_356_p4 = src_buf1_0_V_reg_352;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_src_buf1_V_phi_fu_368_p4 = src_buf1_0_V_reg_352;
    end else begin
        ap_phi_mux_src_buf1_V_phi_fu_368_p4 = src_buf1_V_reg_364;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_src_buf2_V_phi_fu_330_p4 = src_buf2_0_V_reg_314;
    end else begin
        ap_phi_mux_src_buf2_V_phi_fu_330_p4 = src_buf2_V_reg_326;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_src_buf3_0_V_phi_fu_344_p4 = buf2_V_reg_831;
    end else begin
        ap_phi_mux_src_buf3_0_V_phi_fu_344_p4 = src_buf3_0_V_reg_339;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_src_buf3_V_phi_fu_306_p4 = src_buf3_0_V_reg_339;
    end else begin
        ap_phi_mux_src_buf3_V_phi_fu_306_p4 = src_buf3_V_reg_302;
    end
end

always @ (*) begin
    if (((tmp_1_fu_460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_14_reg_768 == 2'd0))) begin
        buf_0_V_address1 = buf_0_V_addr_1_gep_fu_210_p3;
    end else if (((tmp_5_reg_764 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_01066_3_reg_759 == 2'd0))) begin
        buf_0_V_address1 = tmp_11_fu_621_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_0_V_address1 = tmp_7_fu_441_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_14_reg_768 == 2'd0)) | ((tmp_5_reg_764 == 1'd0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (p_01066_3_reg_759 == 2'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_14_reg_768 == 2'd0))) begin
        buf_0_V_d1 = p_src_mat_V_V_dout;
    end else if ((((tmp_5_reg_764 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_01066_3_reg_759 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_14_reg_768 == 2'd0)) | ((tmp_5_reg_764 == 1'd0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (p_01066_3_reg_759 == 2'd0)) | ((tmp_6_reg_713 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_14_reg_768 == 2'd1))) begin
        buf_1_V_address1 = buf_1_V_addr_1_gep_fu_216_p3;
    end else if (((tmp_5_reg_764 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_01066_3_reg_759 == 2'd1))) begin
        buf_1_V_address1 = tmp_11_fu_621_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_V_address1 = tmp_7_fu_441_p1;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_14_reg_768 == 2'd1)) | ((tmp_5_reg_764 == 1'd0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (p_01066_3_reg_759 == 2'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_reg_764 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_01066_3_reg_759 == 2'd1))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_14_reg_768 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_d1 = p_src_mat_V_V_dout;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_14_reg_768 == 2'd1)) | ((tmp_5_reg_764 == 1'd0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (p_01066_3_reg_759 == 2'd1)) | ((tmp_6_reg_713 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_350)) begin
        if ((1'b1 == ap_condition_647)) begin
            buf_2_V_address1 = buf_2_V_addr_gep_fu_222_p3;
        end else if ((1'b1 == ap_condition_643)) begin
            buf_2_V_address1 = tmp_11_fu_621_p1;
        end else begin
            buf_2_V_address1 = 'bx;
        end
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(tmp_14_reg_768 == 2'd1) & ~(tmp_14_reg_768 == 2'd0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(p_01066_3_reg_759 == 2'd1) & ~(p_01066_3_reg_759 == 2'd0) & (tmp_5_reg_764 == 1'd0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_350)) begin
        if ((1'b1 == ap_condition_647)) begin
            buf_2_V_d1 = p_src_mat_V_V_dout;
        end else if ((1'b1 == ap_condition_643)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(tmp_14_reg_768 == 2'd1) & ~(tmp_14_reg_768 == 2'd0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(p_01066_3_reg_759 == 2'd1) & ~(p_01066_3_reg_759 == 2'd0) & (tmp_5_reg_764 == 1'd0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        p_gradx_mat_V_V_blk_n = p_gradx_mat_V_V_full_n;
    end else begin
        p_gradx_mat_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        p_gradx_mat_V_V_din = GradientValuesX_0_V_2_reg_846;
    end else if (((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        p_gradx_mat_V_V_din = GradientValuesX_0_V_reg_836;
    end else begin
        p_gradx_mat_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        p_gradx_mat_V_V_write = 1'b1;
    end else begin
        p_gradx_mat_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        p_grady_mat_V_V_blk_n = p_grady_mat_V_V_full_n;
    end else begin
        p_grady_mat_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        p_grady_mat_V_V_din = GradientValuesY_0_V_2_reg_851;
    end else if (((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        p_grady_mat_V_V_din = GradientValuesY_0_V_reg_841;
    end else begin
        p_grady_mat_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        p_grady_mat_V_V_write = 1'b1;
    end else begin
        p_grady_mat_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_6_reg_713 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_mat_V_V_blk_n = p_src_mat_V_V_empty_n;
    end else begin
        p_src_mat_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op100_read_state7 == 1'b1)) | ((tmp_6_reg_713 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_mat_V_V_read = 1'b1;
    end else begin
        p_src_mat_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((tmp_6_fu_430_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((tmp_6_fu_430_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_1_fu_460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if ((~((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((tmp_6_reg_713 == 1'd1) & (p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((tmp_6_reg_713 == 1'd1) & (p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter5 == 1'b1) & (((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_grady_mat_V_V_full_n == 1'b0)) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_gradx_mat_V_V_full_n == 1'b0)))) | ((p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op100_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter5 == 1'b1) & (((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_grady_mat_V_V_full_n == 1'b0)) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_gradx_mat_V_V_full_n == 1'b0)))) | ((p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op100_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter5 == 1'b1) & (((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_grady_mat_V_V_full_n == 1'b0)) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_gradx_mat_V_V_full_n == 1'b0)))) | ((p_src_mat_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op100_read_state7 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter5 = (((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_grady_mat_V_V_full_n == 1'b0)) | ((tmp_13_reg_788_pp1_iter4_reg == 1'd0) & (p_gradx_mat_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state13 = ((p_grady_mat_V_V_full_n == 1'b0) | (p_gradx_mat_V_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tmp_6_reg_713 == 1'd1) & (p_src_mat_V_V_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((p_src_mat_V_V_empty_n == 1'b0) & (ap_predicate_op100_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_350 = ((1'b0 == ap_block_pp1_stage0) & (tmp_9_reg_772 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_643 = (~(p_01066_3_reg_759 == 2'd1) & ~(p_01066_3_reg_759 == 2'd0) & (tmp_5_reg_764 == 1'd0));
end

always @ (*) begin
    ap_condition_647 = (~(tmp_14_reg_768 == 2'd1) & ~(tmp_14_reg_768 == 2'd0) & (tmp_5_reg_764 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op100_read_state7 = ((tmp_5_reg_764 == 1'd1) & (tmp_9_reg_772 == 1'd1));
end

assign buf_0_V_addr_1_gep_fu_210_p3 = tmp_11_fu_621_p1;

assign buf_0_V_address0 = tmp_11_reg_781_pp1_iter2_reg;

assign buf_1_V_addr_1_gep_fu_216_p3 = tmp_11_fu_621_p1;

assign buf_1_V_address0 = tmp_11_reg_781;

assign buf_2_V_addr_gep_fu_222_p3 = tmp_11_fu_621_p1;

assign buf_2_V_address0 = tmp_11_reg_781;

assign col_V_1_fu_615_p2 = (ap_phi_mux_p_0177_0_i_phi_fu_294_p4 + 13'd1);

assign col_V_fu_435_p2 = (ap_phi_mux_p_1_phi_fu_258_p4 + 13'd1);

assign op2_assign_fu_450_p2 = (tmp_8_cast_fu_447_p1 + 17'd1);

assign p_01066_3_fu_574_p3 = ((tmp_fu_536_p2[0:0] === 1'b1) ? sel_tmp8_fu_566_p3 : p_2_10_fu_512_p3);

assign p_01072_3_fu_558_p3 = ((tmp_fu_536_p2[0:0] === 1'b1) ? sel_tmp4_fu_550_p3 : p_1_9_fu_504_p3);

assign p_01078_3_fu_542_p3 = ((tmp_fu_536_p2[0:0] === 1'b1) ? sel_tmp_fu_532_p1 : p_s_fu_496_p3);

assign p_1_9_fu_504_p3 = ((tmp_4_fu_490_p2[0:0] === 1'b1) ? 2'd0 : p_4_fu_104);

assign p_2_10_fu_512_p3 = ((tmp_4_fu_490_p2[0:0] === 1'b1) ? 2'd1 : p_5_fu_100);

assign p_s_12_fu_687_p3 = ((tmp_12_fu_681_p2[0:0] === 1'b1) ? 13'd0 : row_ind_V_fu_675_p2);

assign p_s_fu_496_p3 = ((tmp_4_fu_490_p2[0:0] === 1'b1) ? 2'd2 : p_3_fu_108);

assign row_V_fu_695_p2 = (p_6_reg_278 + 13'd1);

assign row_ind_V_fu_675_p2 = (p_2_reg_266 + 13'd1);

assign sel_tmp1_fu_520_p2 = (tmp_2_fu_478_p2 ^ 1'd1);

assign sel_tmp2_fu_526_p2 = (tmp_3_fu_484_p2 & sel_tmp1_fu_520_p2);

assign sel_tmp4_fu_550_p3 = ((sel_tmp2_fu_526_p2[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign sel_tmp8_fu_566_p3 = ((sel_tmp2_fu_526_p2[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign sel_tmp_fu_532_p1 = sel_tmp2_fu_526_p2;

assign tmp_10_cast_fu_606_p1 = ap_phi_mux_p_0177_0_i_phi_fu_294_p4;

assign tmp_11_fu_621_p1 = p_0177_0_i_reg_290;

assign tmp_12_fu_681_p2 = ((row_ind_V_fu_675_p2 == 13'd3) ? 1'b1 : 1'b0);

assign tmp_13_fu_631_p2 = ((p_0177_0_i_reg_290 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_14_fu_587_p1 = p_2_reg_266[1:0];

assign tmp_1_fu_460_p2 = ((tmp_9_cast_fu_456_p1 < op2_assign_reg_740) ? 1'b1 : 1'b0);

assign tmp_2_fu_478_p2 = ((p_2_reg_266 == 13'd2) ? 1'b1 : 1'b0);

assign tmp_3_fu_484_p2 = ((p_2_reg_266 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_490_p2 = ((p_2_reg_266 == 13'd1) ? 1'b1 : 1'b0);

assign tmp_5_fu_582_p2 = ((tmp_9_cast1_fu_474_p1 < img_height) ? 1'b1 : 1'b0);

assign tmp_6_fu_430_p2 = ((tmp_cast_fu_426_p1 < img_width) ? 1'b1 : 1'b0);

assign tmp_7_fu_441_p1 = p_1_reg_254;

assign tmp_8_cast_fu_447_p1 = img_height;

assign tmp_9_cast1_fu_474_p1 = p_6_reg_278;

assign tmp_9_cast_fu_456_p1 = p_6_reg_278;

assign tmp_9_fu_610_p2 = ((tmp_10_cast_fu_606_p1 < img_width) ? 1'b1 : 1'b0);

assign tmp_cast_fu_426_p1 = ap_phi_mux_p_1_phi_fu_258_p4;

assign tmp_fu_536_p2 = (tmp_2_fu_478_p2 | sel_tmp2_fu_526_p2);

always @ (posedge ap_clk) begin
    tmp_11_reg_781[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    tmp_11_reg_781_pp1_iter2_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //xFSobelFilter3x3
